<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="libraryDataSet1" targetNamespace="http://tempuri.org/libraryDataSet1.xsd" xmlns:mstns="http://tempuri.org/libraryDataSet1.xsd" xmlns="http://tempuri.org/libraryDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="libraryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="libraryConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.winformAdminLibrarySystem.Properties.Settings.GlobalReference.Default.libraryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="genresTableAdapter" GeneratorDataComponentClassName="genresTableAdapter" Name="genres" UserDataComponentName="genresTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="libraryConnectionString (Settings)" DbObjectName="library.dbo.genres" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[genres] WHERE (([id_genre] = @Original_id_genre) AND ([name_genre] = @Original_name_genre))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_genre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[genres] ([name_genre]) VALUES (@name_genre);
SELECT id_genre, name_genre FROM genres WHERE (id_genre = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_genre, name_genre FROM dbo.genres</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[genres] SET [name_genre] = @name_genre WHERE (([id_genre] = @Original_id_genre) AND ([name_genre] = @Original_name_genre));
SELECT id_genre, name_genre FROM genres WHERE (id_genre = @id_genre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_genre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_genre" ColumnName="id_genre" DataSourceName="library.dbo.genres" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_genre" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_genre" DataSetColumn="id_genre" />
              <Mapping SourceColumn="name_genre" DataSetColumn="name_genre" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="libraryDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="libraryDataSet1" msprop:Generator_UserDSName="libraryDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="genres" msprop:Generator_TableClassName="genresDataTable" msprop:Generator_TableVarName="tablegenres" msprop:Generator_TablePropName="genres" msprop:Generator_RowDeletingName="genresRowDeleting" msprop:Generator_RowChangingName="genresRowChanging" msprop:Generator_RowEvHandlerName="genresRowChangeEventHandler" msprop:Generator_RowDeletedName="genresRowDeleted" msprop:Generator_UserTableName="genres" msprop:Generator_RowChangedName="genresRowChanged" msprop:Generator_RowEvArgName="genresRowChangeEvent" msprop:Generator_RowClassName="genresRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_genre" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid_genre" msprop:Generator_ColumnPropNameInRow="id_genre" msprop:Generator_ColumnPropNameInTable="id_genreColumn" msprop:Generator_UserColumnName="id_genre" type="xs:int" />
              <xs:element name="name_genre" msprop:Generator_ColumnVarNameInTable="columnname_genre" msprop:Generator_ColumnPropNameInRow="name_genre" msprop:Generator_ColumnPropNameInTable="name_genreColumn" msprop:Generator_UserColumnName="name_genre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:genres" />
      <xs:field xpath="mstns:id_genre" />
    </xs:unique>
  </xs:element>
</xs:schema>